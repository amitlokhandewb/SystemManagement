// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SystemManagementApp.Data;

#nullable disable

namespace SystemManagementApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SystemManagementApp.Model.ActionBy", b =>
                {
                    b.Property<int>("actionById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("actionById"));

                    b.Property<string>("actionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("actionById");

                    b.ToTable("ActionBies");
                });

            modelBuilder.Entity("SystemManagementApp.Model.DeviceType", b =>
                {
                    b.Property<int>("deviceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("deviceTypeId"));

                    b.Property<string>("deviceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("deviceTypeId");

                    b.ToTable("DeviceTypes");
                });

            modelBuilder.Entity("SystemManagementApp.Model.EndUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("EndUsers");
                });

            modelBuilder.Entity("SystemManagementApp.Model.EventDescription", b =>
                {
                    b.Property<int>("eventDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("eventDescriptionId"));

                    b.Property<string>("eventDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("eventDescriptionId");

                    b.ToTable("EventDescription");
                });

            modelBuilder.Entity("SystemManagementApp.Model.EventType", b =>
                {
                    b.Property<int>("eventTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("eventTypeId"));

                    b.Property<string>("eventTypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("eventTypeId");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("SystemManagementApp.Model.Events", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("actionById")
                        .HasColumnType("integer");

                    b.Property<string>("dateTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("deviceTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("eventDescriptionId")
                        .HasColumnType("integer");

                    b.Property<int>("eventTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("eventid")
                        .HasColumnType("integer");

                    b.Property<int>("plantId")
                        .HasColumnType("integer");

                    b.Property<int>("priorityId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("actionById");

                    b.HasIndex("deviceTypeId");

                    b.HasIndex("eventDescriptionId");

                    b.HasIndex("eventTypeId");

                    b.HasIndex("plantId");

                    b.HasIndex("priorityId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("SystemManagementApp.Model.PlantName", b =>
                {
                    b.Property<int>("plantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("plantId"));

                    b.Property<string>("plantName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("plantId");

                    b.ToTable("PlantName");
                });

            modelBuilder.Entity("SystemManagementApp.Model.Priority", b =>
                {
                    b.Property<int>("priorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("priorityId"));

                    b.Property<string>("priorityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("priorityId");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("SystemManagementApp.Model.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SystemManagementApp.Model.EndUser", b =>
                {
                    b.HasOne("SystemManagementApp.Model.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SystemManagementApp.Model.Events", b =>
                {
                    b.HasOne("SystemManagementApp.Model.ActionBy", "ActionBy")
                        .WithMany()
                        .HasForeignKey("actionById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemManagementApp.Model.DeviceType", "DeviceType")
                        .WithMany()
                        .HasForeignKey("deviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemManagementApp.Model.EventDescription", "EventDescription")
                        .WithMany()
                        .HasForeignKey("eventDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemManagementApp.Model.EventType", "eventType")
                        .WithMany()
                        .HasForeignKey("eventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemManagementApp.Model.PlantName", "PlantName")
                        .WithMany()
                        .HasForeignKey("plantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemManagementApp.Model.Priority", "priority")
                        .WithMany()
                        .HasForeignKey("priorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionBy");

                    b.Navigation("DeviceType");

                    b.Navigation("EventDescription");

                    b.Navigation("PlantName");

                    b.Navigation("eventType");

                    b.Navigation("priority");
                });
#pragma warning restore 612, 618
        }
    }
}
